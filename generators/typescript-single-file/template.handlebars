{{#each models ~}}
{{#if isObject ~}}
export interface {{ name }}{{#if hasImplementedInterfaces}} extends {{#each implementedInterfaces}}{{this}}{{/each}}{{/if}} {
    {{#each fields}}
    {{ name }}: {{#if isArray}}Array<{{/if}}{{ type }}{{#if isArray}}>{{/if}}{{#unless isRequired}} | null{{/unless}};
    {{/each ~}}
}

{{/if ~}}

{{#if isEnum ~}}
export type {{ name }} = {{#each enumValues }}"{{ value }}"{{#unless @last}} | {{/unless}}{{/each ~}};

{{/if ~}}

{{#if isUnion ~}}
  {{#if hasUnionTypes}}
export type {{ name }} = {{#each unionTypes}}{{this}}{{#unless @last}} | {{/unless}}{{/each}};
  {{/if}}

{{/if}}
{{/each ~}}

{{#each documents ~}}
export namespace {{ name }} {
  {{#if hasVariables}}
      export type Variables = {
      {{#each variables}}
          {{ name }}: {{#if isArray}}Array<{{/if}}{{ type }}{{#if isArray}}>{{/if}}{{#unless isRequired}} | null{{/unless}};
      {{/each}}
      }

  {{/if ~}}

  {{#each innerTypes}}
      export type {{ name }} = {
      {{#each fields}}
        {{ name }}: {{#if isArray}}Array<{{/if}}{{ type }}{{#if isArray}}>{{/if}};
      {{/each}}
      } {{#each fragmentsUsed}}& {{this}}.Fragment {{/each }}{{#if hasInlineFragments}}& ({{#each inlineFragments}}{{ typeName }}{{/each}} | {}) {{/if}}

  {{/each ~}}

{{#each resultFields}}
      export type Result = {
      {{#each fields}}
      {{ name }}: {{#if isArray}}Array<{{/if}}{{ type }}{{#if isArray}}>{{/if}};
      {{/each}}
      }

  {{/each ~}}
}

{{/each ~}}
