{{{ toComment description }}}
{{#with (importEnum name) }}
  import {{#if type}}{ {{type}}{{#ifCond type "!=" (concat @root.config.interfacePrefix (convert name))}} as {{@root.config.interfacePrefix}}{{ convert name }}{{/ifCond}} }{{else}}{{@root.config.interfacePrefix}}{{ convert name }}{{/if}} from "{{file}}"

  export type {{@root.config.interfacePrefix}}{{ convert name}}ValueMap = {
    {{#each ../values}}
      {{{ value }}}: {{@root.config.interfacePrefix}}{{ convert ../name }},
    {{/each}}
  }

{{else}}
  {{#if @root.config.enumsAsTypes }}
  export type {{@root.config.interfacePrefix}}{{ convert name }} = {{#each values }}{{{ getEnumValue ../name value }}}{{#unless @last}} | {{/unless}}{{/each}};
  {{else}}
  export {{#if @root.config.constEnums }}const {{/if}}enum {{@root.config.interfacePrefix}}{{ convert name }} {
  {{#each values }}
    {{ convert value }} = {{{ getEnumValue ../name value }}},
  {{/each}}
  }
  {{/if}}
{{/with}}
