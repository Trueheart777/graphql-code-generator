{{#ifCond operations.length '!==' 0}}
import { FunctionalComponent } from '@stencil/core';

{{#unless @root.config.noGraphqlTag}}
import gql from 'graphql-tag';
{{/unless}}

{{ blockCommentIf 'Fragments' fragments }}
{{{generateFragments fragments}}}

{{ blockCommentIf 'Components' operations }}
{{#each operations }}
    {{#unless @root.config.noNamespaces}}
export namespace {{convert name}} {
    {{/unless}}
    export const {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Document = {{{ gql this }}};
    export interface ComponentProps {
        variables ?: {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Variables;
        onReady ?: import('stencil-apollo/dist/types/components/apollo-{{ toLowerCase operationType }}/types').On{{ convert operationType }}ReadyFn<{{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}{{ convert operationType }}, {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Variables>;
    }
     export const {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Component: FunctionalComponent<ComponentProps> = (props, children) => {
        return (
            <apollo-{{ toLowerCase operationType }}
            {{ toLowerCase operationType }}={ {{#if @root.config.noNamespaces}}{{ convert name }}{{/if}}Document }
            {...props}
            >
                {children}
            </apollo-{{ toLowerCase operationType }}>
        );
    }
    {{#unless @root.config.noNamespaces}}
}
    {{/unless}}
{{/each}}
{{/ifCond}}
