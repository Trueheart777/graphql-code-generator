/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

import 'stencil-apollo';

export namespace Components {
  interface MyComponentWithCodegen {
    first: string;
    last: string;
  }
  interface MyComponentWithCodegenAttributes extends StencilHTMLAttributes {
    first?: string;
    last?: string;
  }

  interface MyComponent {
    first: string;
    last: string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    first?: string;
    last?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    MyComponentWithCodegen: Components.MyComponentWithCodegen;
    MyComponent: Components.MyComponent;
  }

  interface StencilIntrinsicElements {
    'my-component-with-codegen': Components.MyComponentWithCodegenAttributes;
    'my-component': Components.MyComponentAttributes;
  }

  interface HTMLMyComponentWithCodegenElement extends Components.MyComponentWithCodegen, HTMLStencilElement {}
  var HTMLMyComponentWithCodegenElement: {
    prototype: HTMLMyComponentWithCodegenElement;
    new (): HTMLMyComponentWithCodegenElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'my-component-with-codegen': HTMLMyComponentWithCodegenElement;
    'my-component': HTMLMyComponentElement;
  }

  interface ElementTagNameMap {
    'my-component-with-codegen': HTMLMyComponentWithCodegenElement;
    'my-component': HTMLMyComponentElement;
  }

  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}
}
