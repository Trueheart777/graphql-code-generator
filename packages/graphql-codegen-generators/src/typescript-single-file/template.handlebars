/* tslint:disable */
{{#each scalars}}

{{#if description }}// {{description}}{{/if}}
export type {{ name }} = any;
{{/each}}
{{#each types}}
{{> type }}
{{/each}}
{{#each inputTypes}}
{{> type }}
{{/each}}
{{#each types}}
  {{#each fields}}
    {{# if hasArguments }}
export interface {{ toPascalCase name }}{{ toPascalCase ../name }}Args {
{{#each arguments}}
  {{ name }}: {{ toPrimitive type }}{{#if isArray}}[]{{/if}}{{#unless isRequired}} | null{{/unless}}; {{#if description }}// {{description}}{{/if}}
{{/each}}
}
    {{/if}}
  {{/each}}
{{/each}}
{{#each enums}}
{{#if description }}// {{description}}{{/if}}
export type {{ name }} = {{#each values }}"{{ value }}"{{#unless @last}} | {{/unless}}{{/each}};
{{/each}}
{{#each unions}}

{{#if description }}// {{description}}{{/if}}
export type {{ name }} = {{#each possibleTypes}}{{this}}{{#unless @last}} | {{/unless}}{{/each}};
{{/each}}
