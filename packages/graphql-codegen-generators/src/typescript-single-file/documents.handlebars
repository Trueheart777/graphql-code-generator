{{#each operations }}
export namespace {{ toPascalCase name }} {
  export type Variables = {
  {{#each variables}}
    {{ name }}: {{ toPrimitive type }}{{#if isArray}}[]{{/if}}{{#unless isRequired}} | null{{/unless}};
  {{/each}}
  }

  export type {{ toPascalCase operationType }} = {
    {{> selectionSet fields }}
  }{{#if hasFragmentsSpread}}{{#each fragmentsSpread}} & {{fragmentName}}.Fragment{{/each}}{{/if}}{{#if hasInlineFragments}}{{#each inlineFragments}} & {{onType}}{{/each}}{{/if}}
  {{#each innerModels }}

  export type {{ modelType }} = {
    {{> selectionSet fields }}
  }{{#if hasFragmentsSpread}}{{#each fragmentsSpread}} & {{fragmentName}}.Fragment{{/each}}{{/if}}{{#if hasInlineFragments}}{{#each inlineFragments}} & {{onType}}{{/each}}{{/if}}
  {{/each}}
}
{{/each}}
{{#each fragments }}

export namespace {{name}} {
  export type Fragment = {
    {{> selectionSet fields }}
  }{{#if hasFragmentsSpread}}{{#each fragmentsSpread}} & {{fragmentName}}.Fragment{{/each}}{{/if}}{{#if hasInlineFragments}}{{#each inlineFragments}} & {{onType}}{{/each}}{{/if}}
  {{#each innerModels }}

  export type {{ modelType }} = {
    {{> selectionSet fields }}
  }{{#if hasFragmentsSpread}}{{#each fragmentsSpread}} & {{fragmentName}}.Fragment{{/each}}{{/if}}{{#if hasInlineFragments}}{{#each inlineFragments}} & {{onType}}{{/each}}{{/if}}
  {{/each}}
}
{{/each}}